$op: sys.define
constants:
  token:
    $op: get
    key: obsidian-token
  html:
    $op: doc.get
    key:
      - documentElement
      - outerHTML
functions:
  obsidianRequest:
    $ref: ./obsidian-request
for:
  $op: pipe
  do:
    - $op: doc.get
      key:
        - location
        - hostname
    # Extraction of text content depending on the current site
    - $op: cond
      cases:
        - - $op: eq
            left: www.youtube.com
            right:
              $op: get
          - $op: sys.define
            constants:
              lang: en
            for:
              $ref: ./youtube-captions
      default:
        $op: html.markdown
        html:
          $op: html.simplify
          html:
            $op: sys.get
            key: html
    - url:
        $op: doc.get
        key:
          - location
          - href
      metadata:
        $op: html.metadata
        html:
          $op: sys.get
          key: html
      selection:
        $op: doc.selection
      text:
        $op: get
      # Note title as file name with folder
    - fileName:
        $op: str.join
        values:
          - /web/
          - $op: str.replaceByRegExp
            value:
              $op: get
              key:
                - metadata
                - title
            pattern: "[/\\?%*:|\"<>#]"
            replacement: ""
          - ".md"
      # Note content
      content:
        $op: template.render
        template: |
          ---
          page-title: {{json metadata.title}}
          url: {{url}}
          published: "{{metadata.publishedDate}}"
          modified: "{{metadata.modifiedDate}}"
          date: "{{metadata.date}}"
          description: {{json metadata.description}}
          author: {{metadata.author}}
          image: {{metadata.image}}
          reviewed: false
          ---
          {{#if selection}}

          {{quote selection}}
          {{/if}}

          {{text}}
    # Save note to Obsidian
    - $op: do
      effect:
        $op: sys.call
        fn: obsidianRequest
        arg:
          token:
            $op: sys.get
            key: token
          method: POST
          path:
            $op: str.join
            values:
              - /vault/
              - $op: get
                key: fileName
          headers:
            Content-Type: text/markdown
          body:
            $op: get
            key: content
    # Open note in Obsidian
    - $op: do
      effect:
        $op: sys.call
        fn: obsidianRequest
        arg:
          token:
            $op: sys.get
            key: token
          method: POST
          path:
            $op: str.join
            values:
              - /open/
              - $op: get
                key: fileName
          # Currently obsidian-local-rest-api@2.0.3 returns response with `json` content type
          # and `0` content length. Which causes an error while parsing the response.
          as: text
    - $op: str.join
      values:
        - "Saved to Obsidian: "
        - $op: get
          key: fileName
